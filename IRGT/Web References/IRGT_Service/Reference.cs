//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IRGT.IRGT_Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUser_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMasterDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReport_GroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReport_Group_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkReport_GroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback setReport_GroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteReport_GroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReport_Group_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReport_Group_Type_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkReport_Group_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setReport_Group_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteReport_Group_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMovement_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMovement_Type_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkMovement_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMovement_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMovement_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFund_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFund_Type_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkFund_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFund_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFund_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWork_CenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWork_Center_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkWork_CenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback setWork_CenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteWork_CenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAsset_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAsset_Detail_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAsset_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAsset_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAsset_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAsset_QuotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAsset_Quota_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAsset_QuotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAsset_QuotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAsset_QuotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAsset_DepreciateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAsset_Depreciate_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAsset_DepreciateOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAsset_DepreciateOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAsset_DepreciateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAsset_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAsset_Type_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAsset_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAsset_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAsset_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAsset_CountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAssetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::IRGT.Properties.Settings.Default.IRGT_IRGT_Service_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event getUserCompletedEventHandler getUserCompleted;
        
        /// <remarks/>
        public event getUser_CountCompletedEventHandler getUser_CountCompleted;
        
        /// <remarks/>
        public event checkUserCompletedEventHandler checkUserCompleted;
        
        /// <remarks/>
        public event setUserCompletedEventHandler setUserCompleted;
        
        /// <remarks/>
        public event deleteUserCompletedEventHandler deleteUserCompleted;
        
        /// <remarks/>
        public event getMasterDataCompletedEventHandler getMasterDataCompleted;
        
        /// <remarks/>
        public event getReport_GroupCompletedEventHandler getReport_GroupCompleted;
        
        /// <remarks/>
        public event getReport_Group_CountCompletedEventHandler getReport_Group_CountCompleted;
        
        /// <remarks/>
        public event checkReport_GroupCompletedEventHandler checkReport_GroupCompleted;
        
        /// <remarks/>
        public event setReport_GroupCompletedEventHandler setReport_GroupCompleted;
        
        /// <remarks/>
        public event deleteReport_GroupCompletedEventHandler deleteReport_GroupCompleted;
        
        /// <remarks/>
        public event getReport_Group_TypeCompletedEventHandler getReport_Group_TypeCompleted;
        
        /// <remarks/>
        public event getReport_Group_Type_CountCompletedEventHandler getReport_Group_Type_CountCompleted;
        
        /// <remarks/>
        public event checkReport_Group_TypeCompletedEventHandler checkReport_Group_TypeCompleted;
        
        /// <remarks/>
        public event setReport_Group_TypeCompletedEventHandler setReport_Group_TypeCompleted;
        
        /// <remarks/>
        public event deleteReport_Group_TypeCompletedEventHandler deleteReport_Group_TypeCompleted;
        
        /// <remarks/>
        public event getMovement_TypeCompletedEventHandler getMovement_TypeCompleted;
        
        /// <remarks/>
        public event getMovement_Type_CountCompletedEventHandler getMovement_Type_CountCompleted;
        
        /// <remarks/>
        public event checkMovement_TypeCompletedEventHandler checkMovement_TypeCompleted;
        
        /// <remarks/>
        public event setMovement_TypeCompletedEventHandler setMovement_TypeCompleted;
        
        /// <remarks/>
        public event deleteMovement_TypeCompletedEventHandler deleteMovement_TypeCompleted;
        
        /// <remarks/>
        public event getFund_TypeCompletedEventHandler getFund_TypeCompleted;
        
        /// <remarks/>
        public event getFund_Type_CountCompletedEventHandler getFund_Type_CountCompleted;
        
        /// <remarks/>
        public event checkFund_TypeCompletedEventHandler checkFund_TypeCompleted;
        
        /// <remarks/>
        public event setFund_TypeCompletedEventHandler setFund_TypeCompleted;
        
        /// <remarks/>
        public event deleteFund_TypeCompletedEventHandler deleteFund_TypeCompleted;
        
        /// <remarks/>
        public event getWork_CenterCompletedEventHandler getWork_CenterCompleted;
        
        /// <remarks/>
        public event getWork_Center_CountCompletedEventHandler getWork_Center_CountCompleted;
        
        /// <remarks/>
        public event checkWork_CenterCompletedEventHandler checkWork_CenterCompleted;
        
        /// <remarks/>
        public event setWork_CenterCompletedEventHandler setWork_CenterCompleted;
        
        /// <remarks/>
        public event deleteWork_CenterCompletedEventHandler deleteWork_CenterCompleted;
        
        /// <remarks/>
        public event getAsset_DetailCompletedEventHandler getAsset_DetailCompleted;
        
        /// <remarks/>
        public event getAsset_Detail_CountCompletedEventHandler getAsset_Detail_CountCompleted;
        
        /// <remarks/>
        public event checkAsset_DetailCompletedEventHandler checkAsset_DetailCompleted;
        
        /// <remarks/>
        public event setAsset_DetailCompletedEventHandler setAsset_DetailCompleted;
        
        /// <remarks/>
        public event deleteAsset_DetailCompletedEventHandler deleteAsset_DetailCompleted;
        
        /// <remarks/>
        public event getAsset_QuotaCompletedEventHandler getAsset_QuotaCompleted;
        
        /// <remarks/>
        public event getAsset_Quota_CountCompletedEventHandler getAsset_Quota_CountCompleted;
        
        /// <remarks/>
        public event checkAsset_QuotaCompletedEventHandler checkAsset_QuotaCompleted;
        
        /// <remarks/>
        public event setAsset_QuotaCompletedEventHandler setAsset_QuotaCompleted;
        
        /// <remarks/>
        public event deleteAsset_QuotaCompletedEventHandler deleteAsset_QuotaCompleted;
        
        /// <remarks/>
        public event getAsset_DepreciateCompletedEventHandler getAsset_DepreciateCompleted;
        
        /// <remarks/>
        public event getAsset_Depreciate_CountCompletedEventHandler getAsset_Depreciate_CountCompleted;
        
        /// <remarks/>
        public event checkAsset_DepreciateCompletedEventHandler checkAsset_DepreciateCompleted;
        
        /// <remarks/>
        public event setAsset_DepreciateCompletedEventHandler setAsset_DepreciateCompleted;
        
        /// <remarks/>
        public event deleteAsset_DepreciateCompletedEventHandler deleteAsset_DepreciateCompleted;
        
        /// <remarks/>
        public event getAsset_TypeCompletedEventHandler getAsset_TypeCompleted;
        
        /// <remarks/>
        public event getAsset_Type_CountCompletedEventHandler getAsset_Type_CountCompleted;
        
        /// <remarks/>
        public event checkAsset_TypeCompletedEventHandler checkAsset_TypeCompleted;
        
        /// <remarks/>
        public event setAsset_TypeCompletedEventHandler setAsset_TypeCompleted;
        
        /// <remarks/>
        public event deleteAsset_TypeCompletedEventHandler deleteAsset_TypeCompleted;
        
        /// <remarks/>
        public event getAssetCompletedEventHandler getAssetCompleted;
        
        /// <remarks/>
        public event getAsset_CountCompletedEventHandler getAsset_CountCompleted;
        
        /// <remarks/>
        public event checkAssetCompletedEventHandler checkAssetCompleted;
        
        /// <remarks/>
        public event setAssetCompletedEventHandler setAssetCompleted;
        
        /// <remarks/>
        public event deleteAssetCompletedEventHandler deleteAssetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool login(string User_Code, string Password, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("login", new object[] {
                        User_Code,
                        Password});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string User_Code, string Password) {
            this.loginAsync(User_Code, Password, null);
        }
        
        /// <remarks/>
        public void loginAsync(string User_Code, string Password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        User_Code,
                        Password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getUser(int PageSize, int PageIndex, string User_Code, string Lang) {
            object[] results = this.Invoke("getUser", new object[] {
                        PageSize,
                        PageIndex,
                        User_Code,
                        Lang});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getUserAsync(int PageSize, int PageIndex, string User_Code, string Lang) {
            this.getUserAsync(PageSize, PageIndex, User_Code, Lang, null);
        }
        
        /// <remarks/>
        public void getUserAsync(int PageSize, int PageIndex, string User_Code, string Lang, object userState) {
            if ((this.getUserOperationCompleted == null)) {
                this.getUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserOperationCompleted);
            }
            this.InvokeAsync("getUser", new object[] {
                        PageSize,
                        PageIndex,
                        User_Code,
                        Lang}, this.getUserOperationCompleted, userState);
        }
        
        private void OngetUserOperationCompleted(object arg) {
            if ((this.getUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCompleted(this, new getUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUser_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getUser_Count(string User_Code) {
            object[] results = this.Invoke("getUser_Count", new object[] {
                        User_Code});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getUser_CountAsync(string User_Code) {
            this.getUser_CountAsync(User_Code, null);
        }
        
        /// <remarks/>
        public void getUser_CountAsync(string User_Code, object userState) {
            if ((this.getUser_CountOperationCompleted == null)) {
                this.getUser_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUser_CountOperationCompleted);
            }
            this.InvokeAsync("getUser_Count", new object[] {
                        User_Code}, this.getUser_CountOperationCompleted, userState);
        }
        
        private void OngetUser_CountOperationCompleted(object arg) {
            if ((this.getUser_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUser_CountCompleted(this, new getUser_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkUser(int User_ID, string User_Code, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkUser", new object[] {
                        User_ID,
                        User_Code});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkUserAsync(int User_ID, string User_Code) {
            this.checkUserAsync(User_ID, User_Code, null);
        }
        
        /// <remarks/>
        public void checkUserAsync(int User_ID, string User_Code, object userState) {
            if ((this.checkUserOperationCompleted == null)) {
                this.checkUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckUserOperationCompleted);
            }
            this.InvokeAsync("checkUser", new object[] {
                        User_ID,
                        User_Code}, this.checkUserOperationCompleted, userState);
        }
        
        private void OncheckUserOperationCompleted(object arg) {
            if ((this.checkUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkUserCompleted(this, new checkUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setUser(int User_ID, string User_Type_ID, string User_Code, string User_Password, string Status, string USER_UPDATE, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("setUser", new object[] {
                        User_ID,
                        User_Type_ID,
                        User_Code,
                        User_Password,
                        Status,
                        USER_UPDATE});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setUserAsync(int User_ID, string User_Type_ID, string User_Code, string User_Password, string Status, string USER_UPDATE) {
            this.setUserAsync(User_ID, User_Type_ID, User_Code, User_Password, Status, USER_UPDATE, null);
        }
        
        /// <remarks/>
        public void setUserAsync(int User_ID, string User_Type_ID, string User_Code, string User_Password, string Status, string USER_UPDATE, object userState) {
            if ((this.setUserOperationCompleted == null)) {
                this.setUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUserOperationCompleted);
            }
            this.InvokeAsync("setUser", new object[] {
                        User_ID,
                        User_Type_ID,
                        User_Code,
                        User_Password,
                        Status,
                        USER_UPDATE}, this.setUserOperationCompleted, userState);
        }
        
        private void OnsetUserOperationCompleted(object arg) {
            if ((this.setUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUserCompleted(this, new setUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteUser(int User_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteUser", new object[] {
                        User_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserAsync(int User_ID) {
            this.deleteUserAsync(User_ID, null);
        }
        
        /// <remarks/>
        public void deleteUserAsync(int User_ID, object userState) {
            if ((this.deleteUserOperationCompleted == null)) {
                this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserOperationCompleted);
            }
            this.InvokeAsync("deleteUser", new object[] {
                        User_ID}, this.deleteUserOperationCompleted, userState);
        }
        
        private void OndeleteUserOperationCompleted(object arg) {
            if ((this.deleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserCompleted(this, new deleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMasterData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getMasterData(string FN, string Lang) {
            object[] results = this.Invoke("getMasterData", new object[] {
                        FN,
                        Lang});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getMasterDataAsync(string FN, string Lang) {
            this.getMasterDataAsync(FN, Lang, null);
        }
        
        /// <remarks/>
        public void getMasterDataAsync(string FN, string Lang, object userState) {
            if ((this.getMasterDataOperationCompleted == null)) {
                this.getMasterDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMasterDataOperationCompleted);
            }
            this.InvokeAsync("getMasterData", new object[] {
                        FN,
                        Lang}, this.getMasterDataOperationCompleted, userState);
        }
        
        private void OngetMasterDataOperationCompleted(object arg) {
            if ((this.getMasterDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMasterDataCompleted(this, new getMasterDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReport_Group", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getReport_Group(int PageSize, int PageIndex, string Type_Grp_ID, string Loc_ID, string Lang) {
            object[] results = this.Invoke("getReport_Group", new object[] {
                        PageSize,
                        PageIndex,
                        Type_Grp_ID,
                        Loc_ID,
                        Lang});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getReport_GroupAsync(int PageSize, int PageIndex, string Type_Grp_ID, string Loc_ID, string Lang) {
            this.getReport_GroupAsync(PageSize, PageIndex, Type_Grp_ID, Loc_ID, Lang, null);
        }
        
        /// <remarks/>
        public void getReport_GroupAsync(int PageSize, int PageIndex, string Type_Grp_ID, string Loc_ID, string Lang, object userState) {
            if ((this.getReport_GroupOperationCompleted == null)) {
                this.getReport_GroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReport_GroupOperationCompleted);
            }
            this.InvokeAsync("getReport_Group", new object[] {
                        PageSize,
                        PageIndex,
                        Type_Grp_ID,
                        Loc_ID,
                        Lang}, this.getReport_GroupOperationCompleted, userState);
        }
        
        private void OngetReport_GroupOperationCompleted(object arg) {
            if ((this.getReport_GroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReport_GroupCompleted(this, new getReport_GroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReport_Group_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getReport_Group_Count(string Type_Grp_ID, string Loc_ID) {
            object[] results = this.Invoke("getReport_Group_Count", new object[] {
                        Type_Grp_ID,
                        Loc_ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getReport_Group_CountAsync(string Type_Grp_ID, string Loc_ID) {
            this.getReport_Group_CountAsync(Type_Grp_ID, Loc_ID, null);
        }
        
        /// <remarks/>
        public void getReport_Group_CountAsync(string Type_Grp_ID, string Loc_ID, object userState) {
            if ((this.getReport_Group_CountOperationCompleted == null)) {
                this.getReport_Group_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReport_Group_CountOperationCompleted);
            }
            this.InvokeAsync("getReport_Group_Count", new object[] {
                        Type_Grp_ID,
                        Loc_ID}, this.getReport_Group_CountOperationCompleted, userState);
        }
        
        private void OngetReport_Group_CountOperationCompleted(object arg) {
            if ((this.getReport_Group_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReport_Group_CountCompleted(this, new getReport_Group_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkReport_Group", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkReport_Group(int KeyID, string Type_Grp_ID, string Loc_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkReport_Group", new object[] {
                        KeyID,
                        Type_Grp_ID,
                        Loc_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkReport_GroupAsync(int KeyID, string Type_Grp_ID, string Loc_ID) {
            this.checkReport_GroupAsync(KeyID, Type_Grp_ID, Loc_ID, null);
        }
        
        /// <remarks/>
        public void checkReport_GroupAsync(int KeyID, string Type_Grp_ID, string Loc_ID, object userState) {
            if ((this.checkReport_GroupOperationCompleted == null)) {
                this.checkReport_GroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckReport_GroupOperationCompleted);
            }
            this.InvokeAsync("checkReport_Group", new object[] {
                        KeyID,
                        Type_Grp_ID,
                        Loc_ID}, this.checkReport_GroupOperationCompleted, userState);
        }
        
        private void OncheckReport_GroupOperationCompleted(object arg) {
            if ((this.checkReport_GroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkReport_GroupCompleted(this, new checkReport_GroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setReport_Group", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setReport_Group(int KeyID, string Type_Grp_ID, string Loc_ID, string Start_Date, string End_Date, string UserCode, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("setReport_Group", new object[] {
                        KeyID,
                        Type_Grp_ID,
                        Loc_ID,
                        Start_Date,
                        End_Date,
                        UserCode});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setReport_GroupAsync(int KeyID, string Type_Grp_ID, string Loc_ID, string Start_Date, string End_Date, string UserCode) {
            this.setReport_GroupAsync(KeyID, Type_Grp_ID, Loc_ID, Start_Date, End_Date, UserCode, null);
        }
        
        /// <remarks/>
        public void setReport_GroupAsync(int KeyID, string Type_Grp_ID, string Loc_ID, string Start_Date, string End_Date, string UserCode, object userState) {
            if ((this.setReport_GroupOperationCompleted == null)) {
                this.setReport_GroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetReport_GroupOperationCompleted);
            }
            this.InvokeAsync("setReport_Group", new object[] {
                        KeyID,
                        Type_Grp_ID,
                        Loc_ID,
                        Start_Date,
                        End_Date,
                        UserCode}, this.setReport_GroupOperationCompleted, userState);
        }
        
        private void OnsetReport_GroupOperationCompleted(object arg) {
            if ((this.setReport_GroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setReport_GroupCompleted(this, new setReport_GroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteReport_Group", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteReport_Group(int KeyID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteReport_Group", new object[] {
                        KeyID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteReport_GroupAsync(int KeyID) {
            this.deleteReport_GroupAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void deleteReport_GroupAsync(int KeyID, object userState) {
            if ((this.deleteReport_GroupOperationCompleted == null)) {
                this.deleteReport_GroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteReport_GroupOperationCompleted);
            }
            this.InvokeAsync("deleteReport_Group", new object[] {
                        KeyID}, this.deleteReport_GroupOperationCompleted, userState);
        }
        
        private void OndeleteReport_GroupOperationCompleted(object arg) {
            if ((this.deleteReport_GroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteReport_GroupCompleted(this, new deleteReport_GroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReport_Group_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getReport_Group_Type(int PageSize, int PageIndex, string Type_Grp_ID, string Type_Grp_Name_T, string Type_Grp_Name_E) {
            object[] results = this.Invoke("getReport_Group_Type", new object[] {
                        PageSize,
                        PageIndex,
                        Type_Grp_ID,
                        Type_Grp_Name_T,
                        Type_Grp_Name_E});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getReport_Group_TypeAsync(int PageSize, int PageIndex, string Type_Grp_ID, string Type_Grp_Name_T, string Type_Grp_Name_E) {
            this.getReport_Group_TypeAsync(PageSize, PageIndex, Type_Grp_ID, Type_Grp_Name_T, Type_Grp_Name_E, null);
        }
        
        /// <remarks/>
        public void getReport_Group_TypeAsync(int PageSize, int PageIndex, string Type_Grp_ID, string Type_Grp_Name_T, string Type_Grp_Name_E, object userState) {
            if ((this.getReport_Group_TypeOperationCompleted == null)) {
                this.getReport_Group_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReport_Group_TypeOperationCompleted);
            }
            this.InvokeAsync("getReport_Group_Type", new object[] {
                        PageSize,
                        PageIndex,
                        Type_Grp_ID,
                        Type_Grp_Name_T,
                        Type_Grp_Name_E}, this.getReport_Group_TypeOperationCompleted, userState);
        }
        
        private void OngetReport_Group_TypeOperationCompleted(object arg) {
            if ((this.getReport_Group_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReport_Group_TypeCompleted(this, new getReport_Group_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReport_Group_Type_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getReport_Group_Type_Count(string Type_Grp_ID, string Type_Grp_Name_T, string Type_Grp_Name_E) {
            object[] results = this.Invoke("getReport_Group_Type_Count", new object[] {
                        Type_Grp_ID,
                        Type_Grp_Name_T,
                        Type_Grp_Name_E});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getReport_Group_Type_CountAsync(string Type_Grp_ID, string Type_Grp_Name_T, string Type_Grp_Name_E) {
            this.getReport_Group_Type_CountAsync(Type_Grp_ID, Type_Grp_Name_T, Type_Grp_Name_E, null);
        }
        
        /// <remarks/>
        public void getReport_Group_Type_CountAsync(string Type_Grp_ID, string Type_Grp_Name_T, string Type_Grp_Name_E, object userState) {
            if ((this.getReport_Group_Type_CountOperationCompleted == null)) {
                this.getReport_Group_Type_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReport_Group_Type_CountOperationCompleted);
            }
            this.InvokeAsync("getReport_Group_Type_Count", new object[] {
                        Type_Grp_ID,
                        Type_Grp_Name_T,
                        Type_Grp_Name_E}, this.getReport_Group_Type_CountOperationCompleted, userState);
        }
        
        private void OngetReport_Group_Type_CountOperationCompleted(object arg) {
            if ((this.getReport_Group_Type_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReport_Group_Type_CountCompleted(this, new getReport_Group_Type_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkReport_Group_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkReport_Group_Type(int KeyID, string Type_Grp_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkReport_Group_Type", new object[] {
                        KeyID,
                        Type_Grp_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkReport_Group_TypeAsync(int KeyID, string Type_Grp_ID) {
            this.checkReport_Group_TypeAsync(KeyID, Type_Grp_ID, null);
        }
        
        /// <remarks/>
        public void checkReport_Group_TypeAsync(int KeyID, string Type_Grp_ID, object userState) {
            if ((this.checkReport_Group_TypeOperationCompleted == null)) {
                this.checkReport_Group_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckReport_Group_TypeOperationCompleted);
            }
            this.InvokeAsync("checkReport_Group_Type", new object[] {
                        KeyID,
                        Type_Grp_ID}, this.checkReport_Group_TypeOperationCompleted, userState);
        }
        
        private void OncheckReport_Group_TypeOperationCompleted(object arg) {
            if ((this.checkReport_Group_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkReport_Group_TypeCompleted(this, new checkReport_Group_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setReport_Group_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setReport_Group_Type(int KeyID, string Type_Grp_ID, string Type_Grp_Name_T, string Type_Grp_Name_E, string Start_Date, string End_Date, string UserCode, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("setReport_Group_Type", new object[] {
                        KeyID,
                        Type_Grp_ID,
                        Type_Grp_Name_T,
                        Type_Grp_Name_E,
                        Start_Date,
                        End_Date,
                        UserCode});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setReport_Group_TypeAsync(int KeyID, string Type_Grp_ID, string Type_Grp_Name_T, string Type_Grp_Name_E, string Start_Date, string End_Date, string UserCode) {
            this.setReport_Group_TypeAsync(KeyID, Type_Grp_ID, Type_Grp_Name_T, Type_Grp_Name_E, Start_Date, End_Date, UserCode, null);
        }
        
        /// <remarks/>
        public void setReport_Group_TypeAsync(int KeyID, string Type_Grp_ID, string Type_Grp_Name_T, string Type_Grp_Name_E, string Start_Date, string End_Date, string UserCode, object userState) {
            if ((this.setReport_Group_TypeOperationCompleted == null)) {
                this.setReport_Group_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetReport_Group_TypeOperationCompleted);
            }
            this.InvokeAsync("setReport_Group_Type", new object[] {
                        KeyID,
                        Type_Grp_ID,
                        Type_Grp_Name_T,
                        Type_Grp_Name_E,
                        Start_Date,
                        End_Date,
                        UserCode}, this.setReport_Group_TypeOperationCompleted, userState);
        }
        
        private void OnsetReport_Group_TypeOperationCompleted(object arg) {
            if ((this.setReport_Group_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setReport_Group_TypeCompleted(this, new setReport_Group_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteReport_Group_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteReport_Group_Type(int KeyID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteReport_Group_Type", new object[] {
                        KeyID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteReport_Group_TypeAsync(int KeyID) {
            this.deleteReport_Group_TypeAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void deleteReport_Group_TypeAsync(int KeyID, object userState) {
            if ((this.deleteReport_Group_TypeOperationCompleted == null)) {
                this.deleteReport_Group_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteReport_Group_TypeOperationCompleted);
            }
            this.InvokeAsync("deleteReport_Group_Type", new object[] {
                        KeyID}, this.deleteReport_Group_TypeOperationCompleted, userState);
        }
        
        private void OndeleteReport_Group_TypeOperationCompleted(object arg) {
            if ((this.deleteReport_Group_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteReport_Group_TypeCompleted(this, new deleteReport_Group_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMovement_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getMovement_Type(int PageSize, int PageIndex, string Mvt_ID, string Mvt_Name_T, string Mvt_Name_E) {
            object[] results = this.Invoke("getMovement_Type", new object[] {
                        PageSize,
                        PageIndex,
                        Mvt_ID,
                        Mvt_Name_T,
                        Mvt_Name_E});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getMovement_TypeAsync(int PageSize, int PageIndex, string Mvt_ID, string Mvt_Name_T, string Mvt_Name_E) {
            this.getMovement_TypeAsync(PageSize, PageIndex, Mvt_ID, Mvt_Name_T, Mvt_Name_E, null);
        }
        
        /// <remarks/>
        public void getMovement_TypeAsync(int PageSize, int PageIndex, string Mvt_ID, string Mvt_Name_T, string Mvt_Name_E, object userState) {
            if ((this.getMovement_TypeOperationCompleted == null)) {
                this.getMovement_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMovement_TypeOperationCompleted);
            }
            this.InvokeAsync("getMovement_Type", new object[] {
                        PageSize,
                        PageIndex,
                        Mvt_ID,
                        Mvt_Name_T,
                        Mvt_Name_E}, this.getMovement_TypeOperationCompleted, userState);
        }
        
        private void OngetMovement_TypeOperationCompleted(object arg) {
            if ((this.getMovement_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMovement_TypeCompleted(this, new getMovement_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMovement_Type_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getMovement_Type_Count(string Mvt_ID, string Mvt_Name_T, string Mvt_Name_E) {
            object[] results = this.Invoke("getMovement_Type_Count", new object[] {
                        Mvt_ID,
                        Mvt_Name_T,
                        Mvt_Name_E});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getMovement_Type_CountAsync(string Mvt_ID, string Mvt_Name_T, string Mvt_Name_E) {
            this.getMovement_Type_CountAsync(Mvt_ID, Mvt_Name_T, Mvt_Name_E, null);
        }
        
        /// <remarks/>
        public void getMovement_Type_CountAsync(string Mvt_ID, string Mvt_Name_T, string Mvt_Name_E, object userState) {
            if ((this.getMovement_Type_CountOperationCompleted == null)) {
                this.getMovement_Type_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMovement_Type_CountOperationCompleted);
            }
            this.InvokeAsync("getMovement_Type_Count", new object[] {
                        Mvt_ID,
                        Mvt_Name_T,
                        Mvt_Name_E}, this.getMovement_Type_CountOperationCompleted, userState);
        }
        
        private void OngetMovement_Type_CountOperationCompleted(object arg) {
            if ((this.getMovement_Type_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMovement_Type_CountCompleted(this, new getMovement_Type_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkMovement_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkMovement_Type(int KeyID, string Mvt_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkMovement_Type", new object[] {
                        KeyID,
                        Mvt_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkMovement_TypeAsync(int KeyID, string Mvt_ID) {
            this.checkMovement_TypeAsync(KeyID, Mvt_ID, null);
        }
        
        /// <remarks/>
        public void checkMovement_TypeAsync(int KeyID, string Mvt_ID, object userState) {
            if ((this.checkMovement_TypeOperationCompleted == null)) {
                this.checkMovement_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckMovement_TypeOperationCompleted);
            }
            this.InvokeAsync("checkMovement_Type", new object[] {
                        KeyID,
                        Mvt_ID}, this.checkMovement_TypeOperationCompleted, userState);
        }
        
        private void OncheckMovement_TypeOperationCompleted(object arg) {
            if ((this.checkMovement_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkMovement_TypeCompleted(this, new checkMovement_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setMovement_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setMovement_Type(int KeyID, string Mvt_ID, string Mvt_Name_T, string Mvt_Name_E, string Mvt_Value, string Start_Date, string End_Date, string UserCode, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("setMovement_Type", new object[] {
                        KeyID,
                        Mvt_ID,
                        Mvt_Name_T,
                        Mvt_Name_E,
                        Mvt_Value,
                        Start_Date,
                        End_Date,
                        UserCode});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setMovement_TypeAsync(int KeyID, string Mvt_ID, string Mvt_Name_T, string Mvt_Name_E, string Mvt_Value, string Start_Date, string End_Date, string UserCode) {
            this.setMovement_TypeAsync(KeyID, Mvt_ID, Mvt_Name_T, Mvt_Name_E, Mvt_Value, Start_Date, End_Date, UserCode, null);
        }
        
        /// <remarks/>
        public void setMovement_TypeAsync(int KeyID, string Mvt_ID, string Mvt_Name_T, string Mvt_Name_E, string Mvt_Value, string Start_Date, string End_Date, string UserCode, object userState) {
            if ((this.setMovement_TypeOperationCompleted == null)) {
                this.setMovement_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMovement_TypeOperationCompleted);
            }
            this.InvokeAsync("setMovement_Type", new object[] {
                        KeyID,
                        Mvt_ID,
                        Mvt_Name_T,
                        Mvt_Name_E,
                        Mvt_Value,
                        Start_Date,
                        End_Date,
                        UserCode}, this.setMovement_TypeOperationCompleted, userState);
        }
        
        private void OnsetMovement_TypeOperationCompleted(object arg) {
            if ((this.setMovement_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMovement_TypeCompleted(this, new setMovement_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteMovement_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteMovement_Type(int KeyID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteMovement_Type", new object[] {
                        KeyID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteMovement_TypeAsync(int KeyID) {
            this.deleteMovement_TypeAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void deleteMovement_TypeAsync(int KeyID, object userState) {
            if ((this.deleteMovement_TypeOperationCompleted == null)) {
                this.deleteMovement_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMovement_TypeOperationCompleted);
            }
            this.InvokeAsync("deleteMovement_Type", new object[] {
                        KeyID}, this.deleteMovement_TypeOperationCompleted, userState);
        }
        
        private void OndeleteMovement_TypeOperationCompleted(object arg) {
            if ((this.deleteMovement_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMovement_TypeCompleted(this, new deleteMovement_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFund_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getFund_Type(int PageSize, int PageIndex, string Fund_Type_ID, string Fund_Type_Name_T, string Fund_Type_Name_E) {
            object[] results = this.Invoke("getFund_Type", new object[] {
                        PageSize,
                        PageIndex,
                        Fund_Type_ID,
                        Fund_Type_Name_T,
                        Fund_Type_Name_E});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getFund_TypeAsync(int PageSize, int PageIndex, string Fund_Type_ID, string Fund_Type_Name_T, string Fund_Type_Name_E) {
            this.getFund_TypeAsync(PageSize, PageIndex, Fund_Type_ID, Fund_Type_Name_T, Fund_Type_Name_E, null);
        }
        
        /// <remarks/>
        public void getFund_TypeAsync(int PageSize, int PageIndex, string Fund_Type_ID, string Fund_Type_Name_T, string Fund_Type_Name_E, object userState) {
            if ((this.getFund_TypeOperationCompleted == null)) {
                this.getFund_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFund_TypeOperationCompleted);
            }
            this.InvokeAsync("getFund_Type", new object[] {
                        PageSize,
                        PageIndex,
                        Fund_Type_ID,
                        Fund_Type_Name_T,
                        Fund_Type_Name_E}, this.getFund_TypeOperationCompleted, userState);
        }
        
        private void OngetFund_TypeOperationCompleted(object arg) {
            if ((this.getFund_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFund_TypeCompleted(this, new getFund_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFund_Type_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getFund_Type_Count(string Fund_Type_ID, string Fund_Type_Name_T, string Fund_Type_Name_E) {
            object[] results = this.Invoke("getFund_Type_Count", new object[] {
                        Fund_Type_ID,
                        Fund_Type_Name_T,
                        Fund_Type_Name_E});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getFund_Type_CountAsync(string Fund_Type_ID, string Fund_Type_Name_T, string Fund_Type_Name_E) {
            this.getFund_Type_CountAsync(Fund_Type_ID, Fund_Type_Name_T, Fund_Type_Name_E, null);
        }
        
        /// <remarks/>
        public void getFund_Type_CountAsync(string Fund_Type_ID, string Fund_Type_Name_T, string Fund_Type_Name_E, object userState) {
            if ((this.getFund_Type_CountOperationCompleted == null)) {
                this.getFund_Type_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFund_Type_CountOperationCompleted);
            }
            this.InvokeAsync("getFund_Type_Count", new object[] {
                        Fund_Type_ID,
                        Fund_Type_Name_T,
                        Fund_Type_Name_E}, this.getFund_Type_CountOperationCompleted, userState);
        }
        
        private void OngetFund_Type_CountOperationCompleted(object arg) {
            if ((this.getFund_Type_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFund_Type_CountCompleted(this, new getFund_Type_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkFund_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkFund_Type(int KeyID, string Fund_Type_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkFund_Type", new object[] {
                        KeyID,
                        Fund_Type_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkFund_TypeAsync(int KeyID, string Fund_Type_ID) {
            this.checkFund_TypeAsync(KeyID, Fund_Type_ID, null);
        }
        
        /// <remarks/>
        public void checkFund_TypeAsync(int KeyID, string Fund_Type_ID, object userState) {
            if ((this.checkFund_TypeOperationCompleted == null)) {
                this.checkFund_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckFund_TypeOperationCompleted);
            }
            this.InvokeAsync("checkFund_Type", new object[] {
                        KeyID,
                        Fund_Type_ID}, this.checkFund_TypeOperationCompleted, userState);
        }
        
        private void OncheckFund_TypeOperationCompleted(object arg) {
            if ((this.checkFund_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkFund_TypeCompleted(this, new checkFund_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setFund_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setFund_Type(int KeyID, string Fund_Type_ID, string Fund_Type_Name_T, string Fund_Type_Name_E, string Start_Date, string End_Date, string UserCode, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("setFund_Type", new object[] {
                        KeyID,
                        Fund_Type_ID,
                        Fund_Type_Name_T,
                        Fund_Type_Name_E,
                        Start_Date,
                        End_Date,
                        UserCode});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setFund_TypeAsync(int KeyID, string Fund_Type_ID, string Fund_Type_Name_T, string Fund_Type_Name_E, string Start_Date, string End_Date, string UserCode) {
            this.setFund_TypeAsync(KeyID, Fund_Type_ID, Fund_Type_Name_T, Fund_Type_Name_E, Start_Date, End_Date, UserCode, null);
        }
        
        /// <remarks/>
        public void setFund_TypeAsync(int KeyID, string Fund_Type_ID, string Fund_Type_Name_T, string Fund_Type_Name_E, string Start_Date, string End_Date, string UserCode, object userState) {
            if ((this.setFund_TypeOperationCompleted == null)) {
                this.setFund_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFund_TypeOperationCompleted);
            }
            this.InvokeAsync("setFund_Type", new object[] {
                        KeyID,
                        Fund_Type_ID,
                        Fund_Type_Name_T,
                        Fund_Type_Name_E,
                        Start_Date,
                        End_Date,
                        UserCode}, this.setFund_TypeOperationCompleted, userState);
        }
        
        private void OnsetFund_TypeOperationCompleted(object arg) {
            if ((this.setFund_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFund_TypeCompleted(this, new setFund_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteFund_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteFund_Type(int KeyID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteFund_Type", new object[] {
                        KeyID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteFund_TypeAsync(int KeyID) {
            this.deleteFund_TypeAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void deleteFund_TypeAsync(int KeyID, object userState) {
            if ((this.deleteFund_TypeOperationCompleted == null)) {
                this.deleteFund_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFund_TypeOperationCompleted);
            }
            this.InvokeAsync("deleteFund_Type", new object[] {
                        KeyID}, this.deleteFund_TypeOperationCompleted, userState);
        }
        
        private void OndeleteFund_TypeOperationCompleted(object arg) {
            if ((this.deleteFund_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFund_TypeCompleted(this, new deleteFund_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWork_Center", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getWork_Center(int PageSize, int PageIndex, string Loc_ID, string Loc_Name_T, string Loc_Name_E) {
            object[] results = this.Invoke("getWork_Center", new object[] {
                        PageSize,
                        PageIndex,
                        Loc_ID,
                        Loc_Name_T,
                        Loc_Name_E});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getWork_CenterAsync(int PageSize, int PageIndex, string Loc_ID, string Loc_Name_T, string Loc_Name_E) {
            this.getWork_CenterAsync(PageSize, PageIndex, Loc_ID, Loc_Name_T, Loc_Name_E, null);
        }
        
        /// <remarks/>
        public void getWork_CenterAsync(int PageSize, int PageIndex, string Loc_ID, string Loc_Name_T, string Loc_Name_E, object userState) {
            if ((this.getWork_CenterOperationCompleted == null)) {
                this.getWork_CenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWork_CenterOperationCompleted);
            }
            this.InvokeAsync("getWork_Center", new object[] {
                        PageSize,
                        PageIndex,
                        Loc_ID,
                        Loc_Name_T,
                        Loc_Name_E}, this.getWork_CenterOperationCompleted, userState);
        }
        
        private void OngetWork_CenterOperationCompleted(object arg) {
            if ((this.getWork_CenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWork_CenterCompleted(this, new getWork_CenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWork_Center_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getWork_Center_Count(string Loc_ID, string Loc_Name_T, string Loc_Name_E) {
            object[] results = this.Invoke("getWork_Center_Count", new object[] {
                        Loc_ID,
                        Loc_Name_T,
                        Loc_Name_E});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getWork_Center_CountAsync(string Loc_ID, string Loc_Name_T, string Loc_Name_E) {
            this.getWork_Center_CountAsync(Loc_ID, Loc_Name_T, Loc_Name_E, null);
        }
        
        /// <remarks/>
        public void getWork_Center_CountAsync(string Loc_ID, string Loc_Name_T, string Loc_Name_E, object userState) {
            if ((this.getWork_Center_CountOperationCompleted == null)) {
                this.getWork_Center_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWork_Center_CountOperationCompleted);
            }
            this.InvokeAsync("getWork_Center_Count", new object[] {
                        Loc_ID,
                        Loc_Name_T,
                        Loc_Name_E}, this.getWork_Center_CountOperationCompleted, userState);
        }
        
        private void OngetWork_Center_CountOperationCompleted(object arg) {
            if ((this.getWork_Center_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWork_Center_CountCompleted(this, new getWork_Center_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkWork_Center", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkWork_Center(int KeyID, string Loc_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkWork_Center", new object[] {
                        KeyID,
                        Loc_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkWork_CenterAsync(int KeyID, string Loc_ID) {
            this.checkWork_CenterAsync(KeyID, Loc_ID, null);
        }
        
        /// <remarks/>
        public void checkWork_CenterAsync(int KeyID, string Loc_ID, object userState) {
            if ((this.checkWork_CenterOperationCompleted == null)) {
                this.checkWork_CenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckWork_CenterOperationCompleted);
            }
            this.InvokeAsync("checkWork_Center", new object[] {
                        KeyID,
                        Loc_ID}, this.checkWork_CenterOperationCompleted, userState);
        }
        
        private void OncheckWork_CenterOperationCompleted(object arg) {
            if ((this.checkWork_CenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkWork_CenterCompleted(this, new checkWork_CenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setWork_Center", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setWork_Center(int KeyID, string Loc_ID, string Loc_Name_T, string Loc_Name_E, string Loc_Address_T, string Loc_Address_E, string Loc_Tel, string Loc_Level, string Start_Date, string End_Date, string UserCode, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("setWork_Center", new object[] {
                        KeyID,
                        Loc_ID,
                        Loc_Name_T,
                        Loc_Name_E,
                        Loc_Address_T,
                        Loc_Address_E,
                        Loc_Tel,
                        Loc_Level,
                        Start_Date,
                        End_Date,
                        UserCode});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setWork_CenterAsync(int KeyID, string Loc_ID, string Loc_Name_T, string Loc_Name_E, string Loc_Address_T, string Loc_Address_E, string Loc_Tel, string Loc_Level, string Start_Date, string End_Date, string UserCode) {
            this.setWork_CenterAsync(KeyID, Loc_ID, Loc_Name_T, Loc_Name_E, Loc_Address_T, Loc_Address_E, Loc_Tel, Loc_Level, Start_Date, End_Date, UserCode, null);
        }
        
        /// <remarks/>
        public void setWork_CenterAsync(int KeyID, string Loc_ID, string Loc_Name_T, string Loc_Name_E, string Loc_Address_T, string Loc_Address_E, string Loc_Tel, string Loc_Level, string Start_Date, string End_Date, string UserCode, object userState) {
            if ((this.setWork_CenterOperationCompleted == null)) {
                this.setWork_CenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWork_CenterOperationCompleted);
            }
            this.InvokeAsync("setWork_Center", new object[] {
                        KeyID,
                        Loc_ID,
                        Loc_Name_T,
                        Loc_Name_E,
                        Loc_Address_T,
                        Loc_Address_E,
                        Loc_Tel,
                        Loc_Level,
                        Start_Date,
                        End_Date,
                        UserCode}, this.setWork_CenterOperationCompleted, userState);
        }
        
        private void OnsetWork_CenterOperationCompleted(object arg) {
            if ((this.setWork_CenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWork_CenterCompleted(this, new setWork_CenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteWork_Center", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteWork_Center(int KeyID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteWork_Center", new object[] {
                        KeyID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteWork_CenterAsync(int KeyID) {
            this.deleteWork_CenterAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void deleteWork_CenterAsync(int KeyID, object userState) {
            if ((this.deleteWork_CenterOperationCompleted == null)) {
                this.deleteWork_CenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteWork_CenterOperationCompleted);
            }
            this.InvokeAsync("deleteWork_Center", new object[] {
                        KeyID}, this.deleteWork_CenterOperationCompleted, userState);
        }
        
        private void OndeleteWork_CenterOperationCompleted(object arg) {
            if ((this.deleteWork_CenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteWork_CenterCompleted(this, new deleteWork_CenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAsset_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAsset_Detail(int PageSize, int PageIndex, string Item_ID, string Loc_ID, string Asset_Type_ID, string Asset_ID, string Lang) {
            object[] results = this.Invoke("getAsset_Detail", new object[] {
                        PageSize,
                        PageIndex,
                        Item_ID,
                        Loc_ID,
                        Asset_Type_ID,
                        Asset_ID,
                        Lang});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAsset_DetailAsync(int PageSize, int PageIndex, string Item_ID, string Loc_ID, string Asset_Type_ID, string Asset_ID, string Lang) {
            this.getAsset_DetailAsync(PageSize, PageIndex, Item_ID, Loc_ID, Asset_Type_ID, Asset_ID, Lang, null);
        }
        
        /// <remarks/>
        public void getAsset_DetailAsync(int PageSize, int PageIndex, string Item_ID, string Loc_ID, string Asset_Type_ID, string Asset_ID, string Lang, object userState) {
            if ((this.getAsset_DetailOperationCompleted == null)) {
                this.getAsset_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAsset_DetailOperationCompleted);
            }
            this.InvokeAsync("getAsset_Detail", new object[] {
                        PageSize,
                        PageIndex,
                        Item_ID,
                        Loc_ID,
                        Asset_Type_ID,
                        Asset_ID,
                        Lang}, this.getAsset_DetailOperationCompleted, userState);
        }
        
        private void OngetAsset_DetailOperationCompleted(object arg) {
            if ((this.getAsset_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAsset_DetailCompleted(this, new getAsset_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAsset_Detail_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getAsset_Detail_Count(string Item_ID, string Loc_ID, string Asset_Type_ID, string Asset_ID) {
            object[] results = this.Invoke("getAsset_Detail_Count", new object[] {
                        Item_ID,
                        Loc_ID,
                        Asset_Type_ID,
                        Asset_ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getAsset_Detail_CountAsync(string Item_ID, string Loc_ID, string Asset_Type_ID, string Asset_ID) {
            this.getAsset_Detail_CountAsync(Item_ID, Loc_ID, Asset_Type_ID, Asset_ID, null);
        }
        
        /// <remarks/>
        public void getAsset_Detail_CountAsync(string Item_ID, string Loc_ID, string Asset_Type_ID, string Asset_ID, object userState) {
            if ((this.getAsset_Detail_CountOperationCompleted == null)) {
                this.getAsset_Detail_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAsset_Detail_CountOperationCompleted);
            }
            this.InvokeAsync("getAsset_Detail_Count", new object[] {
                        Item_ID,
                        Loc_ID,
                        Asset_Type_ID,
                        Asset_ID}, this.getAsset_Detail_CountOperationCompleted, userState);
        }
        
        private void OngetAsset_Detail_CountOperationCompleted(object arg) {
            if ((this.getAsset_Detail_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAsset_Detail_CountCompleted(this, new getAsset_Detail_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkAsset_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkAsset_Detail(int KeyID, string Item_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkAsset_Detail", new object[] {
                        KeyID,
                        Item_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkAsset_DetailAsync(int KeyID, string Item_ID) {
            this.checkAsset_DetailAsync(KeyID, Item_ID, null);
        }
        
        /// <remarks/>
        public void checkAsset_DetailAsync(int KeyID, string Item_ID, object userState) {
            if ((this.checkAsset_DetailOperationCompleted == null)) {
                this.checkAsset_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAsset_DetailOperationCompleted);
            }
            this.InvokeAsync("checkAsset_Detail", new object[] {
                        KeyID,
                        Item_ID}, this.checkAsset_DetailOperationCompleted, userState);
        }
        
        private void OncheckAsset_DetailOperationCompleted(object arg) {
            if ((this.checkAsset_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAsset_DetailCompleted(this, new checkAsset_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setAsset_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setAsset_Detail(
                    int KeyID, 
                    string Item_ID, 
                    string Loc_ID, 
                    string Asset_Type_ID, 
                    string Asset_ID, 
                    string Serial_No, 
                    string Asset_Loc, 
                    string Owner, 
                    string Quality, 
                    string Tranfer_Loc, 
                    string Budget_Year, 
                    string Document_No, 
                    string Document_Date, 
                    string Fund_Type_ID, 
                    string Standard_Price, 
                    string Price_per_unit, 
                    string Purchase_Doc_no, 
                    string Purchase_Doc_date, 
                    string Brand, 
                    string Serie, 
                    string Receive_from, 
                    string Mvt_ID, 
                    string Term_Use, 
                    string Depriciate_accru, 
                    string Depriciate_in_year, 
                    string Net_Price, 
                    string UserCode, 
                    out string ReturnMSG_TH, 
                    out string ReturnMSG_EN) {
            object[] results = this.Invoke("setAsset_Detail", new object[] {
                        KeyID,
                        Item_ID,
                        Loc_ID,
                        Asset_Type_ID,
                        Asset_ID,
                        Serial_No,
                        Asset_Loc,
                        Owner,
                        Quality,
                        Tranfer_Loc,
                        Budget_Year,
                        Document_No,
                        Document_Date,
                        Fund_Type_ID,
                        Standard_Price,
                        Price_per_unit,
                        Purchase_Doc_no,
                        Purchase_Doc_date,
                        Brand,
                        Serie,
                        Receive_from,
                        Mvt_ID,
                        Term_Use,
                        Depriciate_accru,
                        Depriciate_in_year,
                        Net_Price,
                        UserCode});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setAsset_DetailAsync(
                    int KeyID, 
                    string Item_ID, 
                    string Loc_ID, 
                    string Asset_Type_ID, 
                    string Asset_ID, 
                    string Serial_No, 
                    string Asset_Loc, 
                    string Owner, 
                    string Quality, 
                    string Tranfer_Loc, 
                    string Budget_Year, 
                    string Document_No, 
                    string Document_Date, 
                    string Fund_Type_ID, 
                    string Standard_Price, 
                    string Price_per_unit, 
                    string Purchase_Doc_no, 
                    string Purchase_Doc_date, 
                    string Brand, 
                    string Serie, 
                    string Receive_from, 
                    string Mvt_ID, 
                    string Term_Use, 
                    string Depriciate_accru, 
                    string Depriciate_in_year, 
                    string Net_Price, 
                    string UserCode) {
            this.setAsset_DetailAsync(KeyID, Item_ID, Loc_ID, Asset_Type_ID, Asset_ID, Serial_No, Asset_Loc, Owner, Quality, Tranfer_Loc, Budget_Year, Document_No, Document_Date, Fund_Type_ID, Standard_Price, Price_per_unit, Purchase_Doc_no, Purchase_Doc_date, Brand, Serie, Receive_from, Mvt_ID, Term_Use, Depriciate_accru, Depriciate_in_year, Net_Price, UserCode, null);
        }
        
        /// <remarks/>
        public void setAsset_DetailAsync(
                    int KeyID, 
                    string Item_ID, 
                    string Loc_ID, 
                    string Asset_Type_ID, 
                    string Asset_ID, 
                    string Serial_No, 
                    string Asset_Loc, 
                    string Owner, 
                    string Quality, 
                    string Tranfer_Loc, 
                    string Budget_Year, 
                    string Document_No, 
                    string Document_Date, 
                    string Fund_Type_ID, 
                    string Standard_Price, 
                    string Price_per_unit, 
                    string Purchase_Doc_no, 
                    string Purchase_Doc_date, 
                    string Brand, 
                    string Serie, 
                    string Receive_from, 
                    string Mvt_ID, 
                    string Term_Use, 
                    string Depriciate_accru, 
                    string Depriciate_in_year, 
                    string Net_Price, 
                    string UserCode, 
                    object userState) {
            if ((this.setAsset_DetailOperationCompleted == null)) {
                this.setAsset_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAsset_DetailOperationCompleted);
            }
            this.InvokeAsync("setAsset_Detail", new object[] {
                        KeyID,
                        Item_ID,
                        Loc_ID,
                        Asset_Type_ID,
                        Asset_ID,
                        Serial_No,
                        Asset_Loc,
                        Owner,
                        Quality,
                        Tranfer_Loc,
                        Budget_Year,
                        Document_No,
                        Document_Date,
                        Fund_Type_ID,
                        Standard_Price,
                        Price_per_unit,
                        Purchase_Doc_no,
                        Purchase_Doc_date,
                        Brand,
                        Serie,
                        Receive_from,
                        Mvt_ID,
                        Term_Use,
                        Depriciate_accru,
                        Depriciate_in_year,
                        Net_Price,
                        UserCode}, this.setAsset_DetailOperationCompleted, userState);
        }
        
        private void OnsetAsset_DetailOperationCompleted(object arg) {
            if ((this.setAsset_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAsset_DetailCompleted(this, new setAsset_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAsset_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAsset_Detail(int KeyID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteAsset_Detail", new object[] {
                        KeyID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsset_DetailAsync(int KeyID) {
            this.deleteAsset_DetailAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void deleteAsset_DetailAsync(int KeyID, object userState) {
            if ((this.deleteAsset_DetailOperationCompleted == null)) {
                this.deleteAsset_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAsset_DetailOperationCompleted);
            }
            this.InvokeAsync("deleteAsset_Detail", new object[] {
                        KeyID}, this.deleteAsset_DetailOperationCompleted, userState);
        }
        
        private void OndeleteAsset_DetailOperationCompleted(object arg) {
            if ((this.deleteAsset_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAsset_DetailCompleted(this, new deleteAsset_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAsset_Quota", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAsset_Quota(int PageSize, int PageIndex, string Asset_ID, string Loc_ID, string Lang) {
            object[] results = this.Invoke("getAsset_Quota", new object[] {
                        PageSize,
                        PageIndex,
                        Asset_ID,
                        Loc_ID,
                        Lang});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAsset_QuotaAsync(int PageSize, int PageIndex, string Asset_ID, string Loc_ID, string Lang) {
            this.getAsset_QuotaAsync(PageSize, PageIndex, Asset_ID, Loc_ID, Lang, null);
        }
        
        /// <remarks/>
        public void getAsset_QuotaAsync(int PageSize, int PageIndex, string Asset_ID, string Loc_ID, string Lang, object userState) {
            if ((this.getAsset_QuotaOperationCompleted == null)) {
                this.getAsset_QuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAsset_QuotaOperationCompleted);
            }
            this.InvokeAsync("getAsset_Quota", new object[] {
                        PageSize,
                        PageIndex,
                        Asset_ID,
                        Loc_ID,
                        Lang}, this.getAsset_QuotaOperationCompleted, userState);
        }
        
        private void OngetAsset_QuotaOperationCompleted(object arg) {
            if ((this.getAsset_QuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAsset_QuotaCompleted(this, new getAsset_QuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAsset_Quota_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getAsset_Quota_Count(string Asset_ID, string Loc_ID) {
            object[] results = this.Invoke("getAsset_Quota_Count", new object[] {
                        Asset_ID,
                        Loc_ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getAsset_Quota_CountAsync(string Asset_ID, string Loc_ID) {
            this.getAsset_Quota_CountAsync(Asset_ID, Loc_ID, null);
        }
        
        /// <remarks/>
        public void getAsset_Quota_CountAsync(string Asset_ID, string Loc_ID, object userState) {
            if ((this.getAsset_Quota_CountOperationCompleted == null)) {
                this.getAsset_Quota_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAsset_Quota_CountOperationCompleted);
            }
            this.InvokeAsync("getAsset_Quota_Count", new object[] {
                        Asset_ID,
                        Loc_ID}, this.getAsset_Quota_CountOperationCompleted, userState);
        }
        
        private void OngetAsset_Quota_CountOperationCompleted(object arg) {
            if ((this.getAsset_Quota_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAsset_Quota_CountCompleted(this, new getAsset_Quota_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkAsset_Quota", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkAsset_Quota(int KeyID, string Asset_ID, string Loc_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkAsset_Quota", new object[] {
                        KeyID,
                        Asset_ID,
                        Loc_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkAsset_QuotaAsync(int KeyID, string Asset_ID, string Loc_ID) {
            this.checkAsset_QuotaAsync(KeyID, Asset_ID, Loc_ID, null);
        }
        
        /// <remarks/>
        public void checkAsset_QuotaAsync(int KeyID, string Asset_ID, string Loc_ID, object userState) {
            if ((this.checkAsset_QuotaOperationCompleted == null)) {
                this.checkAsset_QuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAsset_QuotaOperationCompleted);
            }
            this.InvokeAsync("checkAsset_Quota", new object[] {
                        KeyID,
                        Asset_ID,
                        Loc_ID}, this.checkAsset_QuotaOperationCompleted, userState);
        }
        
        private void OncheckAsset_QuotaOperationCompleted(object arg) {
            if ((this.checkAsset_QuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAsset_QuotaCompleted(this, new checkAsset_QuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setAsset_Quota", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setAsset_Quota(int KeyID, string Asset_ID, string Loc_ID, string Quota_Qty, string Stock_Qty, string Start_Date, string End_Date, string UserCode, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("setAsset_Quota", new object[] {
                        KeyID,
                        Asset_ID,
                        Loc_ID,
                        Quota_Qty,
                        Stock_Qty,
                        Start_Date,
                        End_Date,
                        UserCode});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setAsset_QuotaAsync(int KeyID, string Asset_ID, string Loc_ID, string Quota_Qty, string Stock_Qty, string Start_Date, string End_Date, string UserCode) {
            this.setAsset_QuotaAsync(KeyID, Asset_ID, Loc_ID, Quota_Qty, Stock_Qty, Start_Date, End_Date, UserCode, null);
        }
        
        /// <remarks/>
        public void setAsset_QuotaAsync(int KeyID, string Asset_ID, string Loc_ID, string Quota_Qty, string Stock_Qty, string Start_Date, string End_Date, string UserCode, object userState) {
            if ((this.setAsset_QuotaOperationCompleted == null)) {
                this.setAsset_QuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAsset_QuotaOperationCompleted);
            }
            this.InvokeAsync("setAsset_Quota", new object[] {
                        KeyID,
                        Asset_ID,
                        Loc_ID,
                        Quota_Qty,
                        Stock_Qty,
                        Start_Date,
                        End_Date,
                        UserCode}, this.setAsset_QuotaOperationCompleted, userState);
        }
        
        private void OnsetAsset_QuotaOperationCompleted(object arg) {
            if ((this.setAsset_QuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAsset_QuotaCompleted(this, new setAsset_QuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAsset_Quota", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAsset_Quota(int KeyID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteAsset_Quota", new object[] {
                        KeyID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsset_QuotaAsync(int KeyID) {
            this.deleteAsset_QuotaAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void deleteAsset_QuotaAsync(int KeyID, object userState) {
            if ((this.deleteAsset_QuotaOperationCompleted == null)) {
                this.deleteAsset_QuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAsset_QuotaOperationCompleted);
            }
            this.InvokeAsync("deleteAsset_Quota", new object[] {
                        KeyID}, this.deleteAsset_QuotaOperationCompleted, userState);
        }
        
        private void OndeleteAsset_QuotaOperationCompleted(object arg) {
            if ((this.deleteAsset_QuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAsset_QuotaCompleted(this, new deleteAsset_QuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAsset_Depreciate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAsset_Depreciate(int PageSize, int PageIndex, string Asset_ID, string Lang) {
            object[] results = this.Invoke("getAsset_Depreciate", new object[] {
                        PageSize,
                        PageIndex,
                        Asset_ID,
                        Lang});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAsset_DepreciateAsync(int PageSize, int PageIndex, string Asset_ID, string Lang) {
            this.getAsset_DepreciateAsync(PageSize, PageIndex, Asset_ID, Lang, null);
        }
        
        /// <remarks/>
        public void getAsset_DepreciateAsync(int PageSize, int PageIndex, string Asset_ID, string Lang, object userState) {
            if ((this.getAsset_DepreciateOperationCompleted == null)) {
                this.getAsset_DepreciateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAsset_DepreciateOperationCompleted);
            }
            this.InvokeAsync("getAsset_Depreciate", new object[] {
                        PageSize,
                        PageIndex,
                        Asset_ID,
                        Lang}, this.getAsset_DepreciateOperationCompleted, userState);
        }
        
        private void OngetAsset_DepreciateOperationCompleted(object arg) {
            if ((this.getAsset_DepreciateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAsset_DepreciateCompleted(this, new getAsset_DepreciateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAsset_Depreciate_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getAsset_Depreciate_Count(string Asset_ID) {
            object[] results = this.Invoke("getAsset_Depreciate_Count", new object[] {
                        Asset_ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getAsset_Depreciate_CountAsync(string Asset_ID) {
            this.getAsset_Depreciate_CountAsync(Asset_ID, null);
        }
        
        /// <remarks/>
        public void getAsset_Depreciate_CountAsync(string Asset_ID, object userState) {
            if ((this.getAsset_Depreciate_CountOperationCompleted == null)) {
                this.getAsset_Depreciate_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAsset_Depreciate_CountOperationCompleted);
            }
            this.InvokeAsync("getAsset_Depreciate_Count", new object[] {
                        Asset_ID}, this.getAsset_Depreciate_CountOperationCompleted, userState);
        }
        
        private void OngetAsset_Depreciate_CountOperationCompleted(object arg) {
            if ((this.getAsset_Depreciate_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAsset_Depreciate_CountCompleted(this, new getAsset_Depreciate_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkAsset_Depreciate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkAsset_Depreciate(int KeyID, string Asset_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkAsset_Depreciate", new object[] {
                        KeyID,
                        Asset_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkAsset_DepreciateAsync(int KeyID, string Asset_ID) {
            this.checkAsset_DepreciateAsync(KeyID, Asset_ID, null);
        }
        
        /// <remarks/>
        public void checkAsset_DepreciateAsync(int KeyID, string Asset_ID, object userState) {
            if ((this.checkAsset_DepreciateOperationCompleted == null)) {
                this.checkAsset_DepreciateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAsset_DepreciateOperationCompleted);
            }
            this.InvokeAsync("checkAsset_Depreciate", new object[] {
                        KeyID,
                        Asset_ID}, this.checkAsset_DepreciateOperationCompleted, userState);
        }
        
        private void OncheckAsset_DepreciateOperationCompleted(object arg) {
            if ((this.checkAsset_DepreciateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAsset_DepreciateCompleted(this, new checkAsset_DepreciateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setAsset_Depreciate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setAsset_Depreciate(int KeyID, string Asset_ID, string Depreciate_Rate, string Standard_Price, string Term_Use, string Start_Date, string End_Date, string UserCode, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("setAsset_Depreciate", new object[] {
                        KeyID,
                        Asset_ID,
                        Depreciate_Rate,
                        Standard_Price,
                        Term_Use,
                        Start_Date,
                        End_Date,
                        UserCode});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setAsset_DepreciateAsync(int KeyID, string Asset_ID, string Depreciate_Rate, string Standard_Price, string Term_Use, string Start_Date, string End_Date, string UserCode) {
            this.setAsset_DepreciateAsync(KeyID, Asset_ID, Depreciate_Rate, Standard_Price, Term_Use, Start_Date, End_Date, UserCode, null);
        }
        
        /// <remarks/>
        public void setAsset_DepreciateAsync(int KeyID, string Asset_ID, string Depreciate_Rate, string Standard_Price, string Term_Use, string Start_Date, string End_Date, string UserCode, object userState) {
            if ((this.setAsset_DepreciateOperationCompleted == null)) {
                this.setAsset_DepreciateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAsset_DepreciateOperationCompleted);
            }
            this.InvokeAsync("setAsset_Depreciate", new object[] {
                        KeyID,
                        Asset_ID,
                        Depreciate_Rate,
                        Standard_Price,
                        Term_Use,
                        Start_Date,
                        End_Date,
                        UserCode}, this.setAsset_DepreciateOperationCompleted, userState);
        }
        
        private void OnsetAsset_DepreciateOperationCompleted(object arg) {
            if ((this.setAsset_DepreciateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAsset_DepreciateCompleted(this, new setAsset_DepreciateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAsset_Depreciate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAsset_Depreciate(int KeyID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteAsset_Depreciate", new object[] {
                        KeyID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsset_DepreciateAsync(int KeyID) {
            this.deleteAsset_DepreciateAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void deleteAsset_DepreciateAsync(int KeyID, object userState) {
            if ((this.deleteAsset_DepreciateOperationCompleted == null)) {
                this.deleteAsset_DepreciateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAsset_DepreciateOperationCompleted);
            }
            this.InvokeAsync("deleteAsset_Depreciate", new object[] {
                        KeyID}, this.deleteAsset_DepreciateOperationCompleted, userState);
        }
        
        private void OndeleteAsset_DepreciateOperationCompleted(object arg) {
            if ((this.deleteAsset_DepreciateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAsset_DepreciateCompleted(this, new deleteAsset_DepreciateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAsset_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAsset_Type(int PageSize, int PageIndex, string Asset_Type_ID, string Asset_Type_Name_T, string Asset_Type_Name_E) {
            object[] results = this.Invoke("getAsset_Type", new object[] {
                        PageSize,
                        PageIndex,
                        Asset_Type_ID,
                        Asset_Type_Name_T,
                        Asset_Type_Name_E});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAsset_TypeAsync(int PageSize, int PageIndex, string Asset_Type_ID, string Asset_Type_Name_T, string Asset_Type_Name_E) {
            this.getAsset_TypeAsync(PageSize, PageIndex, Asset_Type_ID, Asset_Type_Name_T, Asset_Type_Name_E, null);
        }
        
        /// <remarks/>
        public void getAsset_TypeAsync(int PageSize, int PageIndex, string Asset_Type_ID, string Asset_Type_Name_T, string Asset_Type_Name_E, object userState) {
            if ((this.getAsset_TypeOperationCompleted == null)) {
                this.getAsset_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAsset_TypeOperationCompleted);
            }
            this.InvokeAsync("getAsset_Type", new object[] {
                        PageSize,
                        PageIndex,
                        Asset_Type_ID,
                        Asset_Type_Name_T,
                        Asset_Type_Name_E}, this.getAsset_TypeOperationCompleted, userState);
        }
        
        private void OngetAsset_TypeOperationCompleted(object arg) {
            if ((this.getAsset_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAsset_TypeCompleted(this, new getAsset_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAsset_Type_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getAsset_Type_Count(string Asset_Type_ID, string Asset_Type_Name_T, string Asset_Type_Name_E) {
            object[] results = this.Invoke("getAsset_Type_Count", new object[] {
                        Asset_Type_ID,
                        Asset_Type_Name_T,
                        Asset_Type_Name_E});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getAsset_Type_CountAsync(string Asset_Type_ID, string Asset_Type_Name_T, string Asset_Type_Name_E) {
            this.getAsset_Type_CountAsync(Asset_Type_ID, Asset_Type_Name_T, Asset_Type_Name_E, null);
        }
        
        /// <remarks/>
        public void getAsset_Type_CountAsync(string Asset_Type_ID, string Asset_Type_Name_T, string Asset_Type_Name_E, object userState) {
            if ((this.getAsset_Type_CountOperationCompleted == null)) {
                this.getAsset_Type_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAsset_Type_CountOperationCompleted);
            }
            this.InvokeAsync("getAsset_Type_Count", new object[] {
                        Asset_Type_ID,
                        Asset_Type_Name_T,
                        Asset_Type_Name_E}, this.getAsset_Type_CountOperationCompleted, userState);
        }
        
        private void OngetAsset_Type_CountOperationCompleted(object arg) {
            if ((this.getAsset_Type_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAsset_Type_CountCompleted(this, new getAsset_Type_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkAsset_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkAsset_Type(int KeyID, string Asset_Type_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkAsset_Type", new object[] {
                        KeyID,
                        Asset_Type_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkAsset_TypeAsync(int KeyID, string Asset_Type_ID) {
            this.checkAsset_TypeAsync(KeyID, Asset_Type_ID, null);
        }
        
        /// <remarks/>
        public void checkAsset_TypeAsync(int KeyID, string Asset_Type_ID, object userState) {
            if ((this.checkAsset_TypeOperationCompleted == null)) {
                this.checkAsset_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAsset_TypeOperationCompleted);
            }
            this.InvokeAsync("checkAsset_Type", new object[] {
                        KeyID,
                        Asset_Type_ID}, this.checkAsset_TypeOperationCompleted, userState);
        }
        
        private void OncheckAsset_TypeOperationCompleted(object arg) {
            if ((this.checkAsset_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAsset_TypeCompleted(this, new checkAsset_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setAsset_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setAsset_Type(int KeyID, string Asset_Type_ID, string Asset_Type_Name_T, string Asset_Type_Name_E, string Start_Date, string End_Date, string UserCode, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("setAsset_Type", new object[] {
                        KeyID,
                        Asset_Type_ID,
                        Asset_Type_Name_T,
                        Asset_Type_Name_E,
                        Start_Date,
                        End_Date,
                        UserCode});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setAsset_TypeAsync(int KeyID, string Asset_Type_ID, string Asset_Type_Name_T, string Asset_Type_Name_E, string Start_Date, string End_Date, string UserCode) {
            this.setAsset_TypeAsync(KeyID, Asset_Type_ID, Asset_Type_Name_T, Asset_Type_Name_E, Start_Date, End_Date, UserCode, null);
        }
        
        /// <remarks/>
        public void setAsset_TypeAsync(int KeyID, string Asset_Type_ID, string Asset_Type_Name_T, string Asset_Type_Name_E, string Start_Date, string End_Date, string UserCode, object userState) {
            if ((this.setAsset_TypeOperationCompleted == null)) {
                this.setAsset_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAsset_TypeOperationCompleted);
            }
            this.InvokeAsync("setAsset_Type", new object[] {
                        KeyID,
                        Asset_Type_ID,
                        Asset_Type_Name_T,
                        Asset_Type_Name_E,
                        Start_Date,
                        End_Date,
                        UserCode}, this.setAsset_TypeOperationCompleted, userState);
        }
        
        private void OnsetAsset_TypeOperationCompleted(object arg) {
            if ((this.setAsset_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAsset_TypeCompleted(this, new setAsset_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAsset_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAsset_Type(int KeyID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteAsset_Type", new object[] {
                        KeyID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsset_TypeAsync(int KeyID) {
            this.deleteAsset_TypeAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void deleteAsset_TypeAsync(int KeyID, object userState) {
            if ((this.deleteAsset_TypeOperationCompleted == null)) {
                this.deleteAsset_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAsset_TypeOperationCompleted);
            }
            this.InvokeAsync("deleteAsset_Type", new object[] {
                        KeyID}, this.deleteAsset_TypeOperationCompleted, userState);
        }
        
        private void OndeleteAsset_TypeOperationCompleted(object arg) {
            if ((this.deleteAsset_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAsset_TypeCompleted(this, new deleteAsset_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAsset(int PageSize, int PageIndex, string Asset_ID, string Asset_Name_T, string Asset_Name_E, string Asset_Type_ID, string Lang) {
            object[] results = this.Invoke("getAsset", new object[] {
                        PageSize,
                        PageIndex,
                        Asset_ID,
                        Asset_Name_T,
                        Asset_Name_E,
                        Asset_Type_ID,
                        Lang});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAssetAsync(int PageSize, int PageIndex, string Asset_ID, string Asset_Name_T, string Asset_Name_E, string Asset_Type_ID, string Lang) {
            this.getAssetAsync(PageSize, PageIndex, Asset_ID, Asset_Name_T, Asset_Name_E, Asset_Type_ID, Lang, null);
        }
        
        /// <remarks/>
        public void getAssetAsync(int PageSize, int PageIndex, string Asset_ID, string Asset_Name_T, string Asset_Name_E, string Asset_Type_ID, string Lang, object userState) {
            if ((this.getAssetOperationCompleted == null)) {
                this.getAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssetOperationCompleted);
            }
            this.InvokeAsync("getAsset", new object[] {
                        PageSize,
                        PageIndex,
                        Asset_ID,
                        Asset_Name_T,
                        Asset_Name_E,
                        Asset_Type_ID,
                        Lang}, this.getAssetOperationCompleted, userState);
        }
        
        private void OngetAssetOperationCompleted(object arg) {
            if ((this.getAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAssetCompleted(this, new getAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAsset_Count", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getAsset_Count(string Asset_ID, string Asset_Name_T, string Asset_Name_E, string Asset_Type_ID) {
            object[] results = this.Invoke("getAsset_Count", new object[] {
                        Asset_ID,
                        Asset_Name_T,
                        Asset_Name_E,
                        Asset_Type_ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getAsset_CountAsync(string Asset_ID, string Asset_Name_T, string Asset_Name_E, string Asset_Type_ID) {
            this.getAsset_CountAsync(Asset_ID, Asset_Name_T, Asset_Name_E, Asset_Type_ID, null);
        }
        
        /// <remarks/>
        public void getAsset_CountAsync(string Asset_ID, string Asset_Name_T, string Asset_Name_E, string Asset_Type_ID, object userState) {
            if ((this.getAsset_CountOperationCompleted == null)) {
                this.getAsset_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAsset_CountOperationCompleted);
            }
            this.InvokeAsync("getAsset_Count", new object[] {
                        Asset_ID,
                        Asset_Name_T,
                        Asset_Name_E,
                        Asset_Type_ID}, this.getAsset_CountOperationCompleted, userState);
        }
        
        private void OngetAsset_CountOperationCompleted(object arg) {
            if ((this.getAsset_CountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAsset_CountCompleted(this, new getAsset_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkAsset(int KeyID, string Asset_ID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("checkAsset", new object[] {
                        KeyID,
                        Asset_ID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkAssetAsync(int KeyID, string Asset_ID) {
            this.checkAssetAsync(KeyID, Asset_ID, null);
        }
        
        /// <remarks/>
        public void checkAssetAsync(int KeyID, string Asset_ID, object userState) {
            if ((this.checkAssetOperationCompleted == null)) {
                this.checkAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAssetOperationCompleted);
            }
            this.InvokeAsync("checkAsset", new object[] {
                        KeyID,
                        Asset_ID}, this.checkAssetOperationCompleted, userState);
        }
        
        private void OncheckAssetOperationCompleted(object arg) {
            if ((this.checkAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAssetCompleted(this, new checkAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setAsset(int KeyID, string Asset_ID, string Asset_Name1_T, string Asset_Name1_E, string Asset_Name2_T, string Asset_Name2_E, string Asset_Type_ID, string Asset_Ref_No, string Unit_Name, string Start_Date, string End_Date, string UserCode, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("setAsset", new object[] {
                        KeyID,
                        Asset_ID,
                        Asset_Name1_T,
                        Asset_Name1_E,
                        Asset_Name2_T,
                        Asset_Name2_E,
                        Asset_Type_ID,
                        Asset_Ref_No,
                        Unit_Name,
                        Start_Date,
                        End_Date,
                        UserCode});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setAssetAsync(int KeyID, string Asset_ID, string Asset_Name1_T, string Asset_Name1_E, string Asset_Name2_T, string Asset_Name2_E, string Asset_Type_ID, string Asset_Ref_No, string Unit_Name, string Start_Date, string End_Date, string UserCode) {
            this.setAssetAsync(KeyID, Asset_ID, Asset_Name1_T, Asset_Name1_E, Asset_Name2_T, Asset_Name2_E, Asset_Type_ID, Asset_Ref_No, Unit_Name, Start_Date, End_Date, UserCode, null);
        }
        
        /// <remarks/>
        public void setAssetAsync(int KeyID, string Asset_ID, string Asset_Name1_T, string Asset_Name1_E, string Asset_Name2_T, string Asset_Name2_E, string Asset_Type_ID, string Asset_Ref_No, string Unit_Name, string Start_Date, string End_Date, string UserCode, object userState) {
            if ((this.setAssetOperationCompleted == null)) {
                this.setAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAssetOperationCompleted);
            }
            this.InvokeAsync("setAsset", new object[] {
                        KeyID,
                        Asset_ID,
                        Asset_Name1_T,
                        Asset_Name1_E,
                        Asset_Name2_T,
                        Asset_Name2_E,
                        Asset_Type_ID,
                        Asset_Ref_No,
                        Unit_Name,
                        Start_Date,
                        End_Date,
                        UserCode}, this.setAssetOperationCompleted, userState);
        }
        
        private void OnsetAssetOperationCompleted(object arg) {
            if ((this.setAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAssetCompleted(this, new setAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteAsset(int KeyID, out string ReturnMSG_TH, out string ReturnMSG_EN) {
            object[] results = this.Invoke("deleteAsset", new object[] {
                        KeyID});
            ReturnMSG_TH = ((string)(results[1]));
            ReturnMSG_EN = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAssetAsync(int KeyID) {
            this.deleteAssetAsync(KeyID, null);
        }
        
        /// <remarks/>
        public void deleteAssetAsync(int KeyID, object userState) {
            if ((this.deleteAssetOperationCompleted == null)) {
                this.deleteAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAssetOperationCompleted);
            }
            this.InvokeAsync("deleteAsset", new object[] {
                        KeyID}, this.deleteAssetOperationCompleted, userState);
        }
        
        private void OndeleteAssetOperationCompleted(object arg) {
            if ((this.deleteAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAssetCompleted(this, new deleteAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getUserCompletedEventHandler(object sender, getUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getUser_CountCompletedEventHandler(object sender, getUser_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUser_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUser_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkUserCompletedEventHandler(object sender, checkUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setUserCompletedEventHandler(object sender, setUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteUserCompletedEventHandler(object sender, deleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getMasterDataCompletedEventHandler(object sender, getMasterDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMasterDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMasterDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getReport_GroupCompletedEventHandler(object sender, getReport_GroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReport_GroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReport_GroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getReport_Group_CountCompletedEventHandler(object sender, getReport_Group_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReport_Group_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReport_Group_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkReport_GroupCompletedEventHandler(object sender, checkReport_GroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkReport_GroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkReport_GroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setReport_GroupCompletedEventHandler(object sender, setReport_GroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setReport_GroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setReport_GroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteReport_GroupCompletedEventHandler(object sender, deleteReport_GroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteReport_GroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteReport_GroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getReport_Group_TypeCompletedEventHandler(object sender, getReport_Group_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReport_Group_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReport_Group_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getReport_Group_Type_CountCompletedEventHandler(object sender, getReport_Group_Type_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReport_Group_Type_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReport_Group_Type_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkReport_Group_TypeCompletedEventHandler(object sender, checkReport_Group_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkReport_Group_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkReport_Group_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setReport_Group_TypeCompletedEventHandler(object sender, setReport_Group_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setReport_Group_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setReport_Group_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteReport_Group_TypeCompletedEventHandler(object sender, deleteReport_Group_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteReport_Group_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteReport_Group_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getMovement_TypeCompletedEventHandler(object sender, getMovement_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMovement_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMovement_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getMovement_Type_CountCompletedEventHandler(object sender, getMovement_Type_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMovement_Type_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMovement_Type_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkMovement_TypeCompletedEventHandler(object sender, checkMovement_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkMovement_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkMovement_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setMovement_TypeCompletedEventHandler(object sender, setMovement_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setMovement_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setMovement_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteMovement_TypeCompletedEventHandler(object sender, deleteMovement_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteMovement_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteMovement_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getFund_TypeCompletedEventHandler(object sender, getFund_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFund_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFund_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getFund_Type_CountCompletedEventHandler(object sender, getFund_Type_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFund_Type_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFund_Type_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkFund_TypeCompletedEventHandler(object sender, checkFund_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkFund_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkFund_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setFund_TypeCompletedEventHandler(object sender, setFund_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setFund_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setFund_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteFund_TypeCompletedEventHandler(object sender, deleteFund_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteFund_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteFund_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWork_CenterCompletedEventHandler(object sender, getWork_CenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWork_CenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWork_CenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWork_Center_CountCompletedEventHandler(object sender, getWork_Center_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWork_Center_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWork_Center_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkWork_CenterCompletedEventHandler(object sender, checkWork_CenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkWork_CenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkWork_CenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setWork_CenterCompletedEventHandler(object sender, setWork_CenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setWork_CenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setWork_CenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteWork_CenterCompletedEventHandler(object sender, deleteWork_CenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteWork_CenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteWork_CenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAsset_DetailCompletedEventHandler(object sender, getAsset_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAsset_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAsset_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAsset_Detail_CountCompletedEventHandler(object sender, getAsset_Detail_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAsset_Detail_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAsset_Detail_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkAsset_DetailCompletedEventHandler(object sender, checkAsset_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAsset_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAsset_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setAsset_DetailCompletedEventHandler(object sender, setAsset_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAsset_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setAsset_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteAsset_DetailCompletedEventHandler(object sender, deleteAsset_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAsset_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAsset_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAsset_QuotaCompletedEventHandler(object sender, getAsset_QuotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAsset_QuotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAsset_QuotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAsset_Quota_CountCompletedEventHandler(object sender, getAsset_Quota_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAsset_Quota_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAsset_Quota_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkAsset_QuotaCompletedEventHandler(object sender, checkAsset_QuotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAsset_QuotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAsset_QuotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setAsset_QuotaCompletedEventHandler(object sender, setAsset_QuotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAsset_QuotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setAsset_QuotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteAsset_QuotaCompletedEventHandler(object sender, deleteAsset_QuotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAsset_QuotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAsset_QuotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAsset_DepreciateCompletedEventHandler(object sender, getAsset_DepreciateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAsset_DepreciateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAsset_DepreciateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAsset_Depreciate_CountCompletedEventHandler(object sender, getAsset_Depreciate_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAsset_Depreciate_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAsset_Depreciate_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkAsset_DepreciateCompletedEventHandler(object sender, checkAsset_DepreciateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAsset_DepreciateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAsset_DepreciateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setAsset_DepreciateCompletedEventHandler(object sender, setAsset_DepreciateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAsset_DepreciateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setAsset_DepreciateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteAsset_DepreciateCompletedEventHandler(object sender, deleteAsset_DepreciateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAsset_DepreciateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAsset_DepreciateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAsset_TypeCompletedEventHandler(object sender, getAsset_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAsset_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAsset_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAsset_Type_CountCompletedEventHandler(object sender, getAsset_Type_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAsset_Type_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAsset_Type_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkAsset_TypeCompletedEventHandler(object sender, checkAsset_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAsset_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAsset_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setAsset_TypeCompletedEventHandler(object sender, setAsset_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAsset_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setAsset_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteAsset_TypeCompletedEventHandler(object sender, deleteAsset_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAsset_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAsset_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAssetCompletedEventHandler(object sender, getAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAsset_CountCompletedEventHandler(object sender, getAsset_CountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAsset_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAsset_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void checkAssetCompletedEventHandler(object sender, checkAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setAssetCompletedEventHandler(object sender, setAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteAssetCompletedEventHandler(object sender, deleteAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_TH {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReturnMSG_EN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591